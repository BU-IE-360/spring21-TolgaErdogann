Hourly_multiplicative<-decompose(ts_hourly, type="multiplicative")
Hourly_additive<-decompose(ts_hourly, type="additive")
plot(Hourly_multiplicative)
plot(Hourly_additive)
daily = consumption[, list(Consumption=mean(Consumption, na.rm=TRUE)), by=list(as.Date(Date))]
ts_daily=ts(daily$Consumption,freq=7)
Daily_additive<-decompose(ts_daily, type = "additive")
Daily_multiplicative<-decompose(ts_daily, type = "multiplicative")
plot(Daily_multiplicative)
daily(Daily_additive)
plot(Daily_additive)
daily = consumption[, list(Consumption=mean(Consumption, na.rm=TRUE)), by=list(month(Date), year(Date))]
monthly = consumption[, list(Consumption=mean(Consumption, na.rm=TRUE)), by=list(month(Date), year(Date))]
65*12*24
ts_monthly=ts(monthly$Consumption,freq=12)
Monthly_additive<-decompose(ts_monthly, type = "additive")
View(monthly)
monthly = consumption[, list(Consumption=mean(Consumption, na.rm=TRUE)), by=list(month(Date), year(Date))]
ts_monthly=ts(monthly$Consumption,freq=12)
Monthly_additive<-decompose(ts_monthly, type = "additive")
Monthly_multiplicative<-decompose(ts_monthly, type = "multiplicative")
plot(Monthly_multiplicative)
plot(Monthly_additive)
yearly = consumption[, list(Consumption=mean(Consumption, na.rm=TRUE)), by=list(year(Date))]
View(yearly)
library(data.table)
library(lubridate)
library(tidyverse)
library(zoo)
library(forecast)
library(xts)
data_path='/Users/tolgaerdogan/Documents/GitHub/spring21-TolgaErdogann/Data/RealTimeConsumption-01012016-20052021.csv'
consumption=fread(data_path)
consumption=consumption[!is.na(Consumption)]
consumption[,Date:=as.Date(Date)]
consumption[,Consumption:=as.numeric(Consumption)]
head(consumption)
consumption=consumption %>%
mutate(Date = make_datetime(year=year(Date), month=month(Date), day=mday(Date), hour=Hour))
consumption$Consumption<-as.numeric(consumption$Consumption)
str(consumption)
hourly <- xts(consumption$Consumption, order.by=as.Date(consumption$Date,"%d.%m.%Y %H:%M:%S"))
ts_hourly<-ts(hourly,start=c(2016,1), freq=24)
ts.plot(ts_hourly,main="Hourly usage")
acf(ts_hourly)
Hourly_multiplicative<-decompose(ts_hourly, type="multiplicative")
Hourly_additive<-decompose(ts_hourly, type="additive")
plot(Hourly_multiplicative)
plot(Hourly_additive)
daily = consumption[, list(Consumption=mean(Consumption, na.rm=TRUE)), by=list(as.Date(Date))]
ts_daily=ts(daily$Consumption,freq=7)
Daily_additive<-decompose(ts_daily, type = "additive")
Daily_multiplicative<-decompose(ts_daily, type = "multiplicative")
plot(Daily_multiplicative)
plot(Daily_additive)
65*12*
47208/24
47208/24
plot(Daily_additive$seasonal[1:30], type ='1')
plot(Daily_additive$seasonal[1:30])
plot(Daily_additive$seasonal[1:30], type=1)
plot(Daily_additive$seasonal[1:30], type'l')
plot(Daily_additive$seasonal[1:30], type='l')
plot(Hourly_additive$seasonal[1:600], type='l')
plot(Hourly_additive$seasonal[1:300], type='l')
plot(Hourly_additive$seasonal[1:100], type='l')
1967/30
monthly = consumption[, list(Consumption=mean(Consumption, na.rm=TRUE)), by=list(month(Date), year(Date))]
monthly = consumption[, list(Consumption=mean(Consumption, na.rm=TRUE)), by=list(month(Date), year(Date))]
ts_monthly=ts(monthly$Consumption,freq=12)
Monthly_additive<-decompose(ts_monthly, type = "additive")
Monthly_multiplicative<-decompose(ts_monthly, type = "multiplicative")
plot(Monthly_multiplicative)
plot(Monthly_additive)
plot(Daily_additive$seasonal[1:30], type='l')
plot(Monthly_additive$seasonal[1:30], type='l')
View(Daily_additive)
View(daily)
View(monthly)
data_path='/Users/tolgaerdogan/Documents/GitHub/spring21-TolgaErdogann/Data/RealTimeConsumption-01012016-20052021.csv'
consumption=fread(data_path)
consumption=consumption[!is.na(Consumption)]
consumption[,Date:=as.Date(Date)]
##consumption[,Consumption:=as.numeric(Consumption)]
head(consumption)
consumption=consumption %>%
mutate(Date = make_datetime(year=year(Date), month=month(Date), day=mday(Date), hour=Hour))
consumption$Consumption<-as.numeric(consumption$Consumption)
str(consumption)
daily = consumption[, list(Consumption=mean(Consumption, na.rm=TRUE)), by=list(mday(Date))]
View(daily)
hourly = consumption[, list(Consumption=Consumption), by=list(hour(Date))]
View(hourly)
##hourly <- xts(consumption$Consumption, order.by=as.Date(consumption$Date,"%d.%m.%Y %H:%M:%S"))
ts_hourly<-ts(hourly, freq=24)
ts.plot(ts_hourly,main="Hourly usage")
acf(ts_hourly)
hourly = consumption[, list(Consumption=Consumption), by=list(as.Date(Date))]
##hourly <- xts(consumption$Consumption, order.by=as.Date(consumption$Date,"%d.%m.%Y %H:%M:%S"))
ts_hourly<-ts(hourly, freq=24)
View(hourly)
ts.plot(ts_hourly,main="Hourly usage")
acf(ts_hourly)
View(hourly)
hourly = consumption[, list(Consumption=Consumption)]
##hourly <- xts(consumption$Consumption, order.by=as.Date(consumption$Date,"%d.%m.%Y %H:%M:%S"))
ts_hourly<-ts(hourly, freq=24)
ts.plot(ts_hourly,main="Hourly usage")
acf(ts_hourly)
##hourly <- xts(consumption$Consumption, order.by=as.Date(consumption$Date,"%d.%m.%Y %H:%M:%S"))
ts_hourly<-ts(hourly, freq=24)
plot(monthly)
hourly = consumption[, Consumption]
##hourly <- xts(consumption$Consumption, order.by=as.Date(consumption$Date,"%d.%m.%Y %H:%M:%S"))
ts_hourly<-ts(hourly, freq=24)
ts.plot(ts_hourly,main="Hourly usage")
acf(ts_hourly)
Hourly_multiplicative<-decompose(ts_hourly, type="multiplicative")
Hourly_additive<-decompose(ts_hourly, type="additive")
plot(Hourly_multiplicative)
plot(Hourly_additive)
plot(Hourly_additive$seasonal[1:100], type='l')
hourly = consumption[, Consumption]
ts_hourly<-ts(hourly, freq=24)
ts.plot(ts_hourly,main="Hourly usage")
acf(ts_hourly)
```{r echo=TRUE, message=FALSE, warning=FALSE, paged.print=FALSE}
Hourly_multiplicative<-decompose(ts_hourly, type="multiplicative")
Hourly_additive<-decompose(ts_hourly, type="additive")
plot(Hourly_multiplicative)
plot(Hourly_additive)
plot(Hourly_additive)
plot(Hourly_additive$seasonal[1:100], type='l')
daily = consumption[, list(Consumption=mean(Consumption, na.rm=TRUE)), by=list(as.Date(Date))]
ts_daily=ts(daily$Consumption,freq=7)
Daily_additive<-decompose(ts_daily, type = "additive")
Daily_multiplicative<-decompose(ts_daily, type = "multiplicative")
plot(Daily_multiplicative)
plot(Daily_additive)
plot(Daily_additive$seasonal[1:30], type='l')
monthly = consumption[, list(Consumption=mean(Consumption, na.rm=TRUE)), by=list(month(Date), year(Date))]
ts_monthly=ts(monthly$Consumption,freq=12)
Monthly_additive<-decompose(ts_monthly, type = "additive")
Monthly_multiplicative<-decompose(ts_monthly, type = "multiplicative")
plot(Monthly_multiplicative)
plot(Monthly_additive)
plot(Monthly_additive$seasonal[1:30], type='l')
plot(Monthly_additive$seasonal[1:70], type='l')
View(Monthly_additive)
plot(monthly$Consumption)
plot(monthly$Consumption,type = 'l')
plot(daily$Consumption,type = 'l')
plot(daily$Consumption[0:20],type = 'l')
plot(daily$Consumption[0:60],type = 'l')
plot(monthly$Consumption,type = 'l')
plot(daily$Consumption,type = 'l')
Daily_additive<-decompose(ts_daily, type = "additive")
Daily_multiplicative<-decompose(ts_daily, type = "multiplicative")
plot(Daily_multiplicative)
monthly = consumption[, list(Consumption=mean(Consumption, na.rm=TRUE)), by=list(month(Date), year(Date))]
ts_monthly=ts(monthly$Consumption,freq=12)
Monthly_additive<-decompose(ts_monthly, type = "additive")
Monthly_multiplicative<-decompose(ts_monthly, type = "multiplicative")
plot(Monthly_multiplicative)
plot(Monthly_additive)
plot(Monthly_additive$seasonal[1:70], type='l')
library(data.table)
library(lubridate)
library(tidyverse)
library(zoo)
library(forecast)
library(xts)
data_path='/Users/tolgaerdogan/Documents/GitHub/spring21-TolgaErdogann/Data/RealTimeConsumption-01012016-20052021.csv'
consumption=fread(data_path)
consumption=consumption[!is.na(Consumption)]
consumption[,Date:=as.Date(Date)]
head(consumption)
consumption=consumption %>%
mutate(Date = make_datetime(year=year(Date), month=month(Date), day=mday(Date), hour=Hour))
consumption$Consumption<-as.numeric(consumption$Consumption)
str(consumption)
hourly = consumption[, Consumption]
ts_hourly<-ts(hourly, freq=24)
ts.plot(ts_hourly,main="Hourly usage")
acf(ts_hourly)
Hourly_multiplicative<-decompose(ts_hourly, type="multiplicative")
Hourly_additive<-decompose(ts_hourly, type="additive")
plot(Hourly_multiplicative)
plot(Hourly_additive)
plot(Hourly_additive$seasonal[1:100], type='l')
library(data.table)
library(lubridate)
library(tidyverse)
library(zoo)
library(forecast)
library(xts)
data_path='/Users/tolgaerdogan/Documents/GitHub/spring21-TolgaErdogann/Data/RealTimeConsumption-01012016-20052021.csv'
consumption=fread(data_path)
consumption=consumption[!is.na(Consumption)]
consumption[,Date:=as.Date(Date)]
head(consumption)
consumption=consumption %>%
mutate(Date = make_datetime(year=year(Date), month=month(Date), day=mday(Date), hour=Hour))
consumption$Consumption<-as.numeric(consumption$Consumption)
str(consumption)
hourly = consumption[, Consumption]
ts_hourly<-ts(hourly, freq=24)
ts.plot(ts_hourly,main="Hourly usage")
acf(ts_hourly)
Hourly_multiplicative<-decompose(ts_hourly, type="multiplicative")
Hourly_additive<-decompose(ts_hourly, type="additive")
plot(Hourly_multiplicative)
plot(Hourly_additive)
Hourly_multiplicative<-decompose(ts_hourly, type="multiplicative")
Hourly_additive<-decompose(ts_hourly, type="additive")
plot(Hourly_multiplicative$random)
plot(Hourly_additive$random)
library(data.table)
library(lubridate)
library(tidyverse)
library(zoo)
library(forecast)
library(xts)
data_path='/Users/tolgaerdogan/Documents/GitHub/spring21-TolgaErdogann/Data/RealTimeConsumption-01012016-20052021.csv'
consumption=fread(data_path)
consumption=consumption[!is.na(Consumption)]
consumption[,Date:=as.Date(Date)]
head(consumption)
consumption=consumption %>%
mutate(Date = make_datetime(year=year(Date), month=month(Date), day=mday(Date), hour=Hour))
consumption$Consumption<-as.numeric(consumption$Consumption)
str(consumption)
hourly = consumption[, Consumption]
ts_hourly<-ts(hourly, freq=24)
ts.plot(ts_hourly,main="Hourly usage")
acf(ts_hourly)
Hourly_multiplicative<-decompose(ts_hourly, type="multiplicative")
Hourly_additive<-decompose(ts_hourly, type="additive")
plot(Hourly_additive$random)
plot(Hourly_additive$seasonal[1:30], type='l')
plot(Hourly_additive$seasonal[1:200], type='l')
plot(Hourly_additive$seasonal[1:150], type='l')
Hourly_additive<-decompose(ts_hourly, type="additive")
plot(Hourly_additive)
plot(Hourly_additive$seasonal[1:100], type='l')
View(Hourly_additive)
daily = consumption[, list(Consumption=mean(Consumption, na.rm=TRUE)), by=list(as.Date(Date))]
ts_daily=ts(daily$Consumption,freq=7)
Daily_additive<-decompose(ts_daily, type = "additive")
plot(Daily_additive)
plot(Daily_additive$seasonal[1:100], type='l')
daily = consumption[, list(Consumption=mean(Consumption, na.rm=TRUE)), by=list(as.Date(Date))]
ts_daily=ts(daily$Consumption,freq=7)
Daily_additive<-decompose(ts_daily, type = "additive")
plot(Daily_additive)
plot(Daily_additive$seasonal[1:50], type='l')
daily = consumption[, list(Consumption=mean(Consumption, na.rm=TRUE)), by=list(as.Date(Date))]
ts_daily=ts(daily$Consumption,freq=7)
Daily_additive<-decompose(ts_daily, type = "additive")
plot(Daily_additive)
plot(Daily_additive$seasonal[1:30], type='l')
model_forecast
model_forecast<-predict(Model2, n.ahead = 336)$pred
library(data.table)
library(lubridate)
library(tidyverse)
library(zoo)
library(urca)
library(forecast)
data_path='/Users/tolgaerdogan/Documents/GitHub/spring21-TolgaErdogann/Data/RealTimeConsumption-01012016-20052021.csv'
consumption=fread(data_path)
consumption=consumption[!is.na(Consumption)]
consumption[,Date:=as.Date(Date)]
head(consumption)
consumption=consumption %>%
mutate(Date = make_datetime(year=year(Date), month=month(Date), day=mday(Date), hour=Hour))
consumption$Consumption<-as.numeric(consumption$Consumption)
str(consumption)
hourly = consumption[, Consumption]
ts_hourly<-ts(hourly, freq=24)
ts.plot(ts_hourly,main="Hourly usage")
acf(ts_hourly)
Hourly_additive<-decompose(ts_hourly, type="additive")
plot(Hourly_additive)
plot(Hourly_additive$seasonal[1:100], type='l')
daily = consumption[, list(Consumption=mean(Consumption, na.rm=TRUE)), by=list(as.Date(Date))]
ts_daily=ts(daily$Consumption,freq=7)
ts.plot(ts_daily,main="Daily Usage")
acf(ts_daily)
Daily_additive<-decompose(ts_daily, type = "additive")
plot(Daily_additive)
plot(Daily_additive$seasonal[1:30], type='l')
monthly = consumption[, list(Consumption=mean(Consumption, na.rm=TRUE)), by=list(month(Date), year(Date))]
ts_monthly=ts(monthly$Consumption,freq=12)
ts.plot(ts_monthly,main="Monthly Usage")
acf(ts_monthly)
Monthly_additive<-decompose(ts_monthly, type = "additive")
plot(Monthly_additive)
plot(Monthly_additive$seasonal[1:70], type='l')
model_ts<-ts(hourly,start(2016,1),frequency = 168)
model_ts_additive<-decompose(model_ts, type = "additive")
plot(model_ts_additive)
plot(model_ts_additive$seasonal[1:500], type='l')
summary(ur.kpss(model_ts_additive$random))
model_deseasonalized<-model_ts-model_ts_additive$seasonal
plot(model_deseasonalized[0:10000], type = 'l')
acf(model_deseasonalized)
model_detrend<-model_deseasonalized-model_ts_additive$trend
plot(model_detrend[0:10000], type = 'l')
acf(model_detrend,na.action = na.omit)
Model_1<-arima(model_ts_additive$random, order=c(1,0,0))
Model_2<-arima(model_ts_additive$random, order=c(2,0,0))
Model_3<-arima(model_ts_additive$random, order=c(3,0,0))
Model_4<-arima(model_ts_additive$random, order=c(4,0,0))
Model_5<-arima(model_ts_additive$random, order=c(5,0,0))
Model_6<-arima(model_ts_additive$random, order=c(6,0,0))
AIC(Model_1)
AIC(Model_2)
AIC(Model_3)
AIC(Model_4)
AIC(Model_5)
AIC(Model_6)
Model_1<-arima(model_ts_additive$random, order=c(0,0,1))
Model_2<-arima(model_ts_additive$random, order=c(0,0,2))
Model_3<-arima(model_ts_additive$random, order=c(0,0,3))
Model_4<-arima(model_ts_additive$random, order=c(0,0,4))
Model_5<-arima(model_ts_additive$random, order=c(0,0,5))
Model_6<-arima(model_ts_additive$random, order=c(0,0,6))
AIC(Model_1)
AIC(Model_2)
AIC(Model_3)
AIC(Model_4)
AIC(Model_5)
AIC(Model_6)
Model1<-arima(model_ts_additive$random, order=c(4,0,5))
Model2<-arima(model_ts_additive$random, order=c(3,0,4))
AIC(Model1)
AIC(Model2)
Fitted<-model_ts_additive$random-Model2$residuals
modeltransformed<-Fitted+model_ts_additive$seasonal+model_ts_additive$trend
plot(model_ts, type ='l')
points(modeltransformed,type='l', col = 2, lty = 2)
plot(model_ts[40000:40500], type ='l')
points(modeltransformed[40000:40500],type='l', col = 2, lty = 2)
model_forecast<-predict(Model2, n.ahead = 336)$pred
model_forecast
last_trend <-tail(model_ts_additive$trend[!is.na(model_ts_additive$trend)],1)
seasonality=model_ts_additive$seasonal[145:480]
model_forecast=model_forecast+seasonality+last_trend
plot(model_forecast)
consumptionactual=consumptionactual[, ConsumptionForecast:=as.numeric(model_forecast)]
data_path='/Users/tolgaerdogan/Documents/GitHub/spring21-TolgaErdogann/Data/RealTimeConsumption-06052021-20052021.csv'
consumptionactual=fread(data_path)
consumptionactual[,Date:=as.Date(Date)]
actual_ts=ts(consumptionactual$Consumption)
plot(actual_ts)
points(model_forecast,type='l', col = 2, lty = 2)
consumptionactual=consumptionactual[, ConsumptionForecast:=as.numeric(model_forecast)]
consumptionactual=consumptionactual[, Error:=Consumption-ConsumptionForecast]
consumptionactual=consumptionactual[, AbsError:=abs(Error)]
consumptionactual=consumptionactual[, Bias:=Error/Consumption]
consumptionactual=consumptionactual[, Ape:=AbsError/Consumption]
Errors = consumptionactual[, list(ConsumptionActual=mean(Consumption, na.rm=TRUE), ConsumptionForecast=mean(ConsumptionForecast, na.rm=TRUE), dailybias=mean(Bias, na.rm=TRUE),dailymape=mean(Ape, na.rm=TRUE)), by=list(as.Date(Date))]
Errors
model_forecast<-predict(Model2, n.ahead = 336)$pred
model_forecast=ts(model_forecast)
last_trend <-tail(model_ts_additive$trend[!is.na(model_ts_additive$trend)],1)
seasonality=model_ts_additive$seasonal[145:480]
model_forecast=model_forecast+seasonality+last_trend
plot(model_forecast)
data_path='/Users/tolgaerdogan/Documents/GitHub/spring21-TolgaErdogann/Data/RealTimeConsumption-06052021-20052021.csv'
consumptionactual=fread(data_path)
consumptionactual[,Date:=as.Date(Date)]
actual_ts=ts(consumptionactual$Consumption)
plot(actual_ts)
points(model_forecast,type='l', col = 2, lty = 2)
consumptionactual=consumptionactual[, ConsumptionForecast:=as.numeric(model_forecast)]
consumptionactual=consumptionactual[, Error:=Consumption-ConsumptionForecast]
consumptionactual=consumptionactual[, AbsError:=abs(Error)]
consumptionactual=consumptionactual[, Bias:=Error/Consumption]
consumptionactual=consumptionactual[, Ape:=AbsError/Consumption]
Errors = consumptionactual[, list(ConsumptionActual=mean(Consumption, na.rm=TRUE), ConsumptionForecast=mean(ConsumptionForecast, na.rm=TRUE), dailybias=mean(Bias, na.rm=TRUE),dailymape=mean(Ape, na.rm=TRUE)), by=list(as.Date(Date))]
Errors
View(consumptionactual)
View(consumption)
library(data.table)
library(lubridate)
library(tidyverse)
library(zoo)
library(urca)
library(forecast)
data_path='/Users/tolgaerdogan/Documents/GitHub/spring21-TolgaErdogann/Data/RealTimeConsumption-01012016-20052021.csv'
consumption=fread(data_path)
consumption=consumption[!is.na(Consumption)]
consumption[,Date:=as.Date(Date)]
head(consumption)
consumption=consumption %>%
mutate(Date = make_datetime(year=year(Date), month=month(Date), day=mday(Date), hour=Hour))
consumption$Consumption<-as.numeric(consumption$Consumption)
str(consumption)
hourly = consumption[, Consumption]
ts_hourly<-ts(hourly, freq=24)
ts.plot(ts_hourly,main="Hourly usage")
acf(ts_hourly)
library(data.table)
library(lubridate)
library(tidyverse)
library(zoo)
library(urca)
library(forecast)
data_path='/Users/tolgaerdogan/Documents/GitHub/spring21-TolgaErdogann/Data/RealTimeConsumption-01012016-20052021.csv'
consumption=fread(data_path)
consumption=consumption[!is.na(Consumption)]
consumption[,Date:=as.Date(Date)]
head(consumption)
consumption=consumption %>%
mutate(Date = make_datetime(year=year(Date), month=month(Date), day=mday(Date), hour=Hour))
consumption$Consumption<-as.numeric(consumption$Consumption)
str(consumption)
hourly = consumption[, Consumption]
ts_hourly<-ts(hourly, freq=24)
ts.plot(ts_hourly,main="Hourly usage")
acf(ts_hourly)
Hourly_additive<-decompose(ts_hourly, type="additive")
plot(Hourly_additive)
plot(Hourly_additive$seasonal[1:100], type='l')
daily = consumption[, list(Consumption=mean(Consumption, na.rm=TRUE)), by=list(as.Date(Date))]
ts_daily=ts(daily$Consumption,freq=7)
ts.plot(ts_daily,main="Daily Usage")
acf(ts_daily)
Daily_additive<-decompose(ts_daily, type = "additive")
plot(Daily_additive)
plot(Daily_additive$seasonal[1:30], type='l')
monthly = consumption[, list(Consumption=mean(Consumption, na.rm=TRUE)), by=list(month(Date), year(Date))]
ts_monthly=ts(monthly$Consumption,freq=12)
ts.plot(ts_monthly,main="Monthly Usage")
acf(ts_monthly)
Monthly_additive<-decompose(ts_monthly, type = "additive")
plot(Monthly_additive)
plot(Monthly_additive$seasonal[1:70], type='l')
model_ts<-ts(hourly,start(2016,1),frequency = 168)
model_ts_additive<-decompose(model_ts, type = "additive")
plot(model_ts_additive)
plot(model_ts_additive$seasonal[1:500], type='l')
summary(ur.kpss(model_ts_additive$random))
model_deseasonalized<-model_ts-model_ts_additive$seasonal
plot(model_deseasonalized[0:10000], type = 'l')
acf(model_deseasonalized)
model_detrend<-model_deseasonalized-model_ts_additive$trend
plot(model_detrend[0:10000], type = 'l')
acf(model_detrend,na.action = na.omit)
Model_1<-arima(model_ts_additive$random, order=c(1,0,0))
Model_2<-arima(model_ts_additive$random, order=c(2,0,0))
Model_3<-arima(model_ts_additive$random, order=c(3,0,0))
Model_4<-arima(model_ts_additive$random, order=c(4,0,0))
Model_5<-arima(model_ts_additive$random, order=c(5,0,0))
Model_6<-arima(model_ts_additive$random, order=c(6,0,0))
AIC(Model_1)
AIC(Model_2)
AIC(Model_3)
AIC(Model_4)
AIC(Model_5)
AIC(Model_6)
Model_1<-arima(model_ts_additive$random, order=c(0,0,1))
Model_2<-arima(model_ts_additive$random, order=c(0,0,2))
Model_3<-arima(model_ts_additive$random, order=c(0,0,3))
Model_4<-arima(model_ts_additive$random, order=c(0,0,4))
Model_5<-arima(model_ts_additive$random, order=c(0,0,5))
Model_6<-arima(model_ts_additive$random, order=c(0,0,6))
AIC(Model_1)
AIC(Model_2)
AIC(Model_3)
AIC(Model_4)
AIC(Model_5)
AIC(Model_6)
Model1<-arima(model_ts_additive$random, order=c(4,0,5))
Model2<-arima(model_ts_additive$random, order=c(3,0,4))
AIC(Model1)
AIC(Model2)
Fitted<-model_ts_additive$random-Model2$residuals
modeltransformed<-Fitted+model_ts_additive$seasonal+model_ts_additive$trend
plot(model_ts, type ='l')
points(modeltransformed,type='l', col = 2, lty = 2)
plot(model_ts[40000:40500], type ='l')
points(modeltransformed[40000:40500],type='l', col = 2, lty = 2)
model_forecast<-predict(Model2, n.ahead = 336)$pred
model_forecast=ts(model_forecast)
last_trend <-tail(model_ts_additive$trend[!is.na(model_ts_additive$trend)],1)
seasonality=model_ts_additive$seasonal[145:480]
model_forecast=model_forecast+seasonality+last_trend
plot(model_forecast)
data_path='/Users/tolgaerdogan/Documents/GitHub/spring21-TolgaErdogann/Data/RealTimeConsumption-06052021-20052021.csv'
consumptionactual=fread(data_path)
consumptionactual[,Date:=as.Date(Date)]
actual_ts=ts(consumptionactual$Consumption)
plot(actual_ts)
points(model_forecast,type='l', col = 2, lty = 2)
model_ts_additive$trend
data_path='/Users/tolgaerdogan/Documents/GitHub/spring21-TolgaErdogann/Data/RealTimeConsumption-01012016-20052021.csv'
consumption=fread(data_path)
consumption=consumption[!is.na(Consumption)]
consumption[,Date:=as.Date(Date)]
library(data.table)
library(lubridate)
library(tidyverse)
library(zoo)
library(urca)
library(forecast)
data_path='/Users/tolgaerdogan/Documents/GitHub/spring21-TolgaErdogann/Data/RealTimeConsumption-01012016-20052021.csv'
consumption=fread(data_path)
consumption=consumption[!is.na(Consumption)]
consumption[,Date:=as.Date(Date)]
